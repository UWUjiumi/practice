#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
//int main()
//{
//	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
//	printf("%d\n", arr[4]);//[]-下标引用操作符
//	//[]的操作数是2个：arr，4
//	return 0;
//}

//int main()
//{
//	int a = 10;
//	int b = 20;
//	int ret = Add(a, b);//（）为函数调用函数
//	return 0;
//}
//
//int Add(int a, int b)
//{
//	return a + b;
//}

//结构成员访问操作符
//.
//->

//结构体
//int float char short
//double long

//书：书名，书号，定价
//人：名字，年龄，性别

//struct Book
//{
//	char name[20];
//	char id[20];
//	int price;
//};
//int main()
//{
//	int num = 10;
//	struct Book b = { "c语言","c20220419",55 };
//	struct Book* pb = &b;
//	//结构体指针->成员名
//	printf("书名:%s\n", pb->name);
//	printf("书号:%s\n", pb->id);
//	printf("定价:%d\n", pb->price);
//	/*printf("书名:%s\n", (*pb).name);
//	printf("书号:%s\n", (*pb).id);
//	printf("定价:%d\n", (*pb).price);*/
//	/*printf("书名:%s\n", b.name);
//	printf("书号:%s\n", b.id);
//	printf("定价:%d\n", b.price);*/
//	return 0;
//}

//int main()
//{
//	char a = 3;
//	char b = 127;
//	char c = a + b;
//	printf("%d\n", c);
//	return 0;
//	//输出为-126
//	//3->  00000011
//	//127->01111111
//	//00000000000000000000000000000011
//	//00000000000000000000000001111111
//	//00000000000000000000000010000010
//
//	//10000010 - c
//	//11111111111111111111111110000010 -补码
//	//11111111111111111111111110000001-反码
//	//10000000000000000000000001111110-原码
//	//最后打印的其实是原码
//	//（整形提升）
//}
//int main()
//{
//	char c = 1;
//	printf("%u\n", sizeof(c));//1
//	printf("%u\n", sizeof(-c));//4
//	printf("%u\n", sizeof(+c));//4
//	printf("%u\n", sizeof(!c));//4 gcc-4
//	return 0;
//}

//int main()
//{
//	int a = 3;
//	int b = 5;
//	short s = 5;
//	printf("%d\n",sizeof(s = a + 3));
//	return 0;
//}
